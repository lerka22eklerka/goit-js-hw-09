{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACVH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEfA,MArCSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAkBC,GAEhBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOH,EAAMI,OAAO,GAAGC,OACnC,MAAMC,EAAOH,OAAOH,EAAMI,OAAO,GAAGC,OAC9BE,EAASJ,OAAOH,EAAMI,OAAO,GAAGC,OACtC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAGnCN,GAASI,EACXnB,EAHmBqB,EAGKN,GACvBO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,UAG/DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoB1B,QAAiBC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  // console.log(event);\n  event.preventDefault();\n  let delay = Number(event.target[0].value);\n  const step = Number(event.target[1].value);\n  const amount = Number(event.target[2].value);\n  for (let i = 1; i <= amount; i += 1) {\n    const position = i;\n    // console.log(i);\n    delay += step;\n  createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }); \n  }\n}\n\n\nfunction createPromise(position, delay) {\n  // console.log(position);\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n if (shouldResolve) {\n   resolve({ position, delay });\n } else {\n   reject({ position, delay });\n }\n    }, delay)\n})\n }\n\n\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5e0f8a1c.js.map"}